#pragma version 6
txn ApplicationID
int 0
==
bnz main_l17
txn OnCompletion
int DeleteApplication
==
bnz main_l16
txn OnCompletion
int UpdateApplication
==
bnz main_l15
txn OnCompletion
int OptIn
==
bnz main_l14
txn OnCompletion
int CloseOut
==
bnz main_l13
txn OnCompletion
int NoOp
==
bnz main_l7
err
main_l7:
txna ApplicationArgs 0
method "addOfferToUser(app, account)uint64"
==
bnz main_l12
txna ApplicationArgs 0
method "addSolidarityForUser(pay, account, string)uint64"
==
bnz main_l10
err
main_l10:
callsub addOfferToUser_7
main_l11:
return
main_l12:
callsub addSolidarityFeeForUser_8
b main_l11
main_l13:
int 1
return
main_l14:
int 1
return
main_l15:
txn Sender
global CreatorAddress
==
return
main_l16:
txn Sender
global CreatorAddress
==
return
main_l17:
int 1
return

// basisPointCalculation
basisPointCalculation_0:
store 5
store 4
int 0
load 4
load 5
int 10000
mulw
divmodw
pop
pop
swap
!
assert
retsub

// transferAsset
transferAsset_1:
store 9
store 8
store 7
store 6
itxn_begin
int axfer
itxn_field TypeEnum
load 6
itxn_field XferAsset
load 7
itxn_field AssetSender
load 8
itxn_field AssetReceiver
load 9
itxn_field AssetAmount
itxn_submit
retsub

// validateApprovalProgram
validateApprovalProgram_2:
store 13
store 12
load 12
app_params_get AppApprovalProgram
store 15
store 14
load 14
sha256
load 13
==
retsub

// raiseSolidarityContribution
raiseSolidarityContribution_3:
store 1
store 0
load 0
byte "SCA"
load 1
app_local_put
retsub

// issueSolidarityTokens
issueSolidarityTokens_4:
store 3
store 2
byte "SA"
global CurrentApplicationAddress
load 2
load 3
int 1000
callsub basisPointCalculation_0
callsub transferAsset_1
retsub

// getValidationHash
getValidationHash_5:
store 16
load 16
byte "A"
==
bnz getValidationHash_5_l8
load 16
byte "C"
==
bnz getValidationHash_5_l7
load 16
byte "L"
==
bnz getValidationHash_5_l6
load 16
byte "R"
==
bnz getValidationHash_5_l5
err
getValidationHash_5_l5:
byte "RVH"
app_global_get
b getValidationHash_5_l9
getValidationHash_5_l6:
byte "LVH"
app_global_get
b getValidationHash_5_l9
getValidationHash_5_l7:
byte "CVH"
app_global_get
b getValidationHash_5_l9
getValidationHash_5_l8:
byte "AVH"
app_global_get
getValidationHash_5_l9:
retsub

// isValidApp
isValidApp_6:
store 11
store 10
load 11
byte "auction"
==
bnz isValidApp_6_l8
load 11
byte "royaltie"
==
bnz isValidApp_6_l7
load 11
byte "listing"
==
bnz isValidApp_6_l6
load 11
byte "collection"
==
bnz isValidApp_6_l5
err
isValidApp_6_l5:
load 10
byte "C"
callsub getValidationHash_5
callsub validateApprovalProgram_2
b isValidApp_6_l9
isValidApp_6_l6:
load 10
byte "L"
callsub getValidationHash_5
callsub validateApprovalProgram_2
b isValidApp_6_l9
isValidApp_6_l7:
load 10
byte "R"
callsub getValidationHash_5
callsub validateApprovalProgram_2
b isValidApp_6_l9
isValidApp_6_l8:
load 10
byte "A"
callsub getValidationHash_5
callsub validateApprovalProgram_2
isValidApp_6_l9:
retsub

// addOfferToUser
addOfferToUser_7:
int 1
retsub

// addSolidarityFeeForUser
addSolidarityFeeForUser_8:
global CallerApplicationID
txna ApplicationArgs 3
callsub isValidApp_6
assert
txna ApplicationArgs 2
btoi
txnas Accounts
txna ApplicationArgs 1
btoi
gtxns Amount
callsub raiseSolidarityContribution_3
txna ApplicationArgs 2
btoi
txnas Accounts
txna ApplicationArgs 1
btoi
gtxns Amount
callsub issueSolidarityTokens_4
int 1
retsub