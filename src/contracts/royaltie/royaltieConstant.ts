export const royaltieClearB64 = "I3ByYWdtYSB2ZXJzaW9uIDYKaW50IDEKcmV0dXJu"
//@ts-ignore 
export const royaltieB64 = "I3ByYWdtYSB2ZXJzaW9uIDYKdHhuIE9uQ29tcGxldGlvbgppbnQgRGVsZXRlQXBwbGljYXRpb24KPT0KYm56IG1haW5fbDI1CnR4biBPbkNvbXBsZXRpb24KaW50IFVwZGF0ZUFwcGxpY2F0aW9uCj09CmJueiBtYWluX2wyNAp0eG4gT25Db21wbGV0aW9uCmludCBPcHRJbgo9PQpibnogbWFpbl9sMjMKdHhuIE9uQ29tcGxldGlvbgppbnQgQ2xvc2VPdXQKPT0KYm56IG1haW5fbDIyCnR4biBPbkNvbXBsZXRpb24KaW50IE5vT3AKPT0KYm56IG1haW5fbDYKZXJyCm1haW5fbDY6CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKbWV0aG9kICJjcmVhdGVORlQocGF5LGFjZmcsYXBwbGljYXRpb24pdWludDY0Igo9PQpibnogbWFpbl9sMjEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAptZXRob2QgInJveWFsdGllRnJlZU1vdmUoYXNzZXQsdWludDY0LGFjY291bnQsYWNjb3VudCl2b2lkIgo9PQp0eG4gU2VuZGVyCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQomJgpibnogbWFpbl9sMjAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAptZXRob2QgInNldHVwKHN0cmluZyx1aW50NjQsYWNjb3VudCxhcHBsaWNhdGlvbixwYXkpdm9pZCIKPT0KYm56IG1haW5fbDE5CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKbWV0aG9kICJ0cmFuc2Zlcihhc3NldCxhY2NvdW50LGFjY291bnQsYWNjb3VudCx1aW50NjQsdHhuLGFzc2V0KXZvaWQiCj09CmJueiBtYWluX2wxOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCm1ldGhvZCAib2ZmZXIoYXNzZXQsdWludDY0LGFjY291bnQpdm9pZCIKPT0KYm56IG1haW5fbDE3CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKbWV0aG9kICJyZXNjaW5kKGFzc2V0KXZvaWQiCj09CmJueiBtYWluX2wxNgp0eG4gQXBwbGljYXRpb25JRAppbnQgMAo9PQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCm1ldGhvZCAiY3JlYXRlKCl1aW50NjQiCj09CiYmCmJueiBtYWluX2wxNAplcnIKbWFpbl9sMTQ6CmNhbGxzdWIgY3JlYXRlXzI4Cm1haW5fbDE1OgpyZXR1cm4KbWFpbl9sMTY6CmNhbGxzdWIgcmVzY2luZF8yNApiIG1haW5fbDE1Cm1haW5fbDE3OgpjYWxsc3ViIGNyZWF0ZVZpZ2VlT2ZmZXJfMjMKYiBtYWluX2wxNQptYWluX2wxODoKY2FsbHN1YiBtYXJrZXRUcmFuc2Zlcl8yMgpiIG1haW5fbDE1Cm1haW5fbDE5OgpjYWxsc3ViIHNldHVwXzIxCmIgbWFpbl9sMTUKbWFpbl9sMjA6CmNhbGxzdWIgcm95YWx0aWVGcmVlTW92ZV8yNQpiIG1haW5fbDE1Cm1haW5fbDIxOgpjYWxsc3ViIGNyZWF0ZVBsYXRmb3JtTkZUXzIwCmIgbWFpbl9sMTUKbWFpbl9sMjI6CmludCAxCnJldHVybgptYWluX2wyMzoKaW50IDEKcmV0dXJuCm1haW5fbDI0Ogp0eG4gU2VuZGVyCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXR1cm4KbWFpbl9sMjU6CnR4biBTZW5kZXIKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCj09CnJldHVybgoKLy8gcmVzb2x2ZVlpZWxkCnJlc29sdmVZaWVsZF8wOgpzdG9yZSAxNApzdG9yZSAxMwpsb2FkIDE0CmludCAwCj09CmJueiByZXNvbHZlWWllbGRfMF9sMgppbnQgMApsb2FkIDEzCmxvYWQgMTQKaW50IDEwMDAwCm11bHcKZGl2bW9kdwpwb3AKcG9wCnN3YXAKIQphc3NlcnQKYiByZXNvbHZlWWllbGRfMF9sMwpyZXNvbHZlWWllbGRfMF9sMjoKaW50IDAKcmVzb2x2ZVlpZWxkXzBfbDM6CnJldHN1YgoKLy8gZ2V0QXBwbGljYXRpb25BZGRyZXNzCmdldEFwcGxpY2F0aW9uQWRkcmVzc18xOgpzdG9yZSAxNwpsb2FkIDE3CmFwcF9wYXJhbXNfZ2V0IEFwcEFkZHJlc3MKc3RvcmUgMTkKc3RvcmUgMTgKbG9hZCAxOApyZXRzdWIKCi8vIHRyYW5zZmVyQXNzZXRzCnRyYW5zZmVyQXNzZXRzXzI6CnN0b3JlIDQ1CnN0b3JlIDQ0CnN0b3JlIDQzCml0eG5fYmVnaW4KaW50IGF4ZmVyCml0eG5fZmllbGQgVHlwZUVudW0KbG9hZCA0MwppdHhuX2ZpZWxkIFhmZXJBc3NldApsb2FkIDQ0Cml0eG5fZmllbGQgQXNzZXRBbW91bnQKbG9hZCA0NQppdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKaXR4bl9zdWJtaXQKcmV0c3ViCgovLyB0cmFuc2ZlckFsZ29zCnRyYW5zZmVyQWxnb3NfMzoKc3RvcmUgMzcKc3RvcmUgMzYKaXR4bl9iZWdpbgppbnQgcGF5Cml0eG5fZmllbGQgVHlwZUVudW0KbG9hZCAzNgppdHhuX2ZpZWxkIEFtb3VudApsb2FkIDM3Cml0eG5fZmllbGQgUmVjZWl2ZXIKaXR4bl9zdWJtaXQKcmV0c3ViCgovLyBlbnN1cmVDdXJyZW50QXBwT3B0ZWRJbnRvQXNzZXQKZW5zdXJlQ3VycmVudEFwcE9wdGVkSW50b0Fzc2V0XzQ6CnN0b3JlIDEKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKbG9hZCAxCmFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQpzdG9yZSAzCnN0b3JlIDIKbG9hZCAzCiEKYnogZW5zdXJlQ3VycmVudEFwcE9wdGVkSW50b0Fzc2V0XzRfbDIKaXR4bl9iZWdpbgppbnQgYXhmZXIKaXR4bl9maWVsZCBUeXBlRW51bQpsb2FkIDEKaXR4bl9maWVsZCBYZmVyQXNzZXQKaW50IDAKaXR4bl9maWVsZCBBc3NldEFtb3VudApnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwppdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKaXR4bl9zdWJtaXQKZW5zdXJlQ3VycmVudEFwcE9wdGVkSW50b0Fzc2V0XzRfbDI6CnJldHN1YgoKLy8gdHJhbnNmZXJBc3NldAp0cmFuc2ZlckFzc2V0XzU6CnN0b3JlIDYwCnN0b3JlIDU5CnN0b3JlIDU4CnN0b3JlIDU3Cml0eG5fYmVnaW4KaW50IGF4ZmVyCml0eG5fZmllbGQgVHlwZUVudW0KbG9hZCA1NwppdHhuX2ZpZWxkIFhmZXJBc3NldApsb2FkIDU4Cml0eG5fZmllbGQgQXNzZXRTZW5kZXIKbG9hZCA1OQppdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKbG9hZCA2MAppdHhuX2ZpZWxkIEFzc2V0QW1vdW50Cml0eG5fc3VibWl0CnJldHN1YgoKLy8gZmV0Y2hTb2xpZGFyaXR5UmF0ZQpmZXRjaFNvbGlkYXJpdHlSYXRlXzY6CnN0b3JlIDUKc3RvcmUgNApsb2FkIDQKbG9hZCA1CmJ5dGUgIlNSIgphcHBfbG9jYWxfZ2V0X2V4CnN0b3JlIDcKc3RvcmUgNgpsb2FkIDcKYm56IGZldGNoU29saWRhcml0eVJhdGVfNl9sMgppbnQgMApiIGZldGNoU29saWRhcml0eVJhdGVfNl9sMwpmZXRjaFNvbGlkYXJpdHlSYXRlXzZfbDI6CmxvYWQgNgpmZXRjaFNvbGlkYXJpdHlSYXRlXzZfbDM6CnJldHN1YgoKLy8gYWRkU29saWRhcml0eUZlZUZvclVzZXIKYWRkU29saWRhcml0eUZlZUZvclVzZXJfNzoKc3RvcmUgMTAKc3RvcmUgOQpzdG9yZSA4CmxvYWQgMTAKYXBwX3BhcmFtc19nZXQgQXBwQWRkcmVzcwpzdG9yZSAxMgpzdG9yZSAxMQppdHhuX2JlZ2luCmludCBwYXkKaXR4bl9maWVsZCBUeXBlRW51bQpsb2FkIDkKbG9hZCA4CmxvYWQgMTAKY2FsbHN1YiBmZXRjaFNvbGlkYXJpdHlSYXRlXzYKY2FsbHN1YiByZXNvbHZlWWllbGRfMAppdHhuX2ZpZWxkIEFtb3VudAppbnQgMAppdHhuX2ZpZWxkIEZlZQpsb2FkIDExCml0eG5fZmllbGQgUmVjZWl2ZXIKaXR4bl9uZXh0CmludCBhcHBsCml0eG5fZmllbGQgVHlwZUVudW0KbG9hZCAxMAppdHhuX2ZpZWxkIEFwcGxpY2F0aW9uSUQKaW50IE5vT3AKaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KaW50IDAKaXR4bl9maWVsZCBGZWUKbWV0aG9kICJhZGRTb2xpZGFyaXR5Rm9yVXNlcihwYXksYWNjb3VudCxzdHJpbmcpdm9pZCIKaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKaW50IDEKaXRvYgppdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwpieXRlICJhdWN0aW9uIgppdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwpsb2FkIDgKaXR4bl9maWVsZCBBY2NvdW50cwppdHhuX3N1Ym1pdApyZXRzdWIKCi8vIGFzc2V0Q3JlYXRpb25UYXhTdXBwbGllZAphc3NldENyZWF0aW9uVGF4U3VwcGxpZWRfODoKc3RvcmUgMTYKc3RvcmUgMTUKbG9hZCAxNQppbnQgMTAwMDAwCmxvYWQgMTYKY2FsbHN1YiByZXNvbHZlWWllbGRfMAppbnQgMTAwMDAwCisKPj0KYXNzZXJ0CmludCAxCnJldHN1YgoKLy8gZ2V0QmFzaXNQb2ludHMKZ2V0QmFzaXNQb2ludHNfOToKYnl0ZSAiUkJQIgphcHBfZ2xvYmFsX2dldApyZXRzdWIKCi8vIGdldFJlY2VpdmVyQWRkcmVzcwpnZXRSZWNlaXZlckFkZHJlc3NfMTA6CmJ5dGUgIlJSQSIKYXBwX2dsb2JhbF9nZXQKcmV0c3ViCgovLyBzZXRCYXNpc1BvaW50cwpzZXRCYXNpc1BvaW50c18xMToKc3RvcmUgMjAKYnl0ZSAiUkJQIgpsb2FkIDIwCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gc2V0Um95YWx0aWVSZWNlaXZlcgpzZXRSb3lhbHRpZVJlY2VpdmVyXzEyOgpzdG9yZSAyMQpieXRlICJSUkEiCmxvYWQgMjEKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyBleHRyYWN0QXV0aG9yaXplckZyb21PZmZlcgpleHRyYWN0QXV0aG9yaXplckZyb21PZmZlcl8xMzoKc3RvcmUgMjcKbG9hZCAyNwpjYWxsc3ViIGdldE9mZmVyXzE3CmNhbGxzdWIgaXNPZmZlclNldF8xNgphc3NlcnQKbG9hZCAyNwpjYWxsc3ViIGdldE9mZmVyXzE3CmV4dHJhY3QgMCAzMgpyZXRzdWIKCi8vIGV4dHJhY3RPZmZlckFtb3VudEZyb21PZmZlcgpleHRyYWN0T2ZmZXJBbW91bnRGcm9tT2ZmZXJfMTQ6CnN0b3JlIDMwCmxvYWQgMzAKY2FsbHN1YiBnZXRPZmZlcl8xNwpjYWxsc3ViIGlzT2ZmZXJTZXRfMTYKYXNzZXJ0CmxvYWQgMzAKY2FsbHN1YiBnZXRPZmZlcl8xNwppbnQgNjQKZXh0cmFjdF91aW50NjQKcmV0c3ViCgovLyBleHRyYWN0U2VsbGVyRnJvbU9mZmVyCmV4dHJhY3RTZWxsZXJGcm9tT2ZmZXJfMTU6CnN0b3JlIDMxCmxvYWQgMzEKY2FsbHN1YiBnZXRPZmZlcl8xNwpjYWxsc3ViIGlzT2ZmZXJTZXRfMTYKYXNzZXJ0CmxvYWQgMzEKY2FsbHN1YiBnZXRPZmZlcl8xNwpleHRyYWN0IDMyIDMyCnJldHN1YgoKLy8gaXNPZmZlclNldAppc09mZmVyU2V0XzE2OgpzdG9yZSAyOApsb2FkIDI4CmludCAwCiE9CmJueiBpc09mZmVyU2V0XzE2X2wyCmludCAwCmIgaXNPZmZlclNldF8xNl9sMwppc09mZmVyU2V0XzE2X2wyOgppbnQgMQppc09mZmVyU2V0XzE2X2wzOgpyZXRzdWIKCi8vIGdldE9mZmVyCmdldE9mZmVyXzE3OgpzdG9yZSAyOQpsb2FkIDI5CmJ5dGUgIk8iCmFwcF9sb2NhbF9nZXQKcmV0c3ViCgovLyBkaXN0cmlidXRlUGF5bWVudFZpYUFsZ29zCmRpc3RyaWJ1dGVQYXltZW50VmlhQWxnb3NfMTg6CnN0b3JlIDM0CnN0b3JlIDMzCnN0b3JlIDMyCmxvYWQgMzIKY2FsbHN1YiBnZXRCYXNpc1BvaW50c185CmNhbGxzdWIgcmVzb2x2ZVlpZWxkXzAKc3RvcmUgMzUKbG9hZCAzMgpsb2FkIDM1Ci0KbG9hZCAzMwpjYWxsc3ViIHRyYW5zZmVyQWxnb3NfMwpsb2FkIDM1CmxvYWQgMzQKY2FsbHN1YiB0cmFuc2ZlckFsZ29zXzMKcmV0c3ViCgovLyBkaXN0cmlidXRlUGF5bWVudFZpYUFzc2V0CmRpc3RyaWJ1dGVQYXltZW50VmlhQXNzZXRfMTk6CnN0b3JlIDQxCnN0b3JlIDQwCnN0b3JlIDM5CnN0b3JlIDM4CmxvYWQgMzkKY2FsbHN1YiBnZXRCYXNpc1BvaW50c185CmNhbGxzdWIgcmVzb2x2ZVlpZWxkXzAKc3RvcmUgNDIKbG9hZCAzOApsb2FkIDM5CmxvYWQgNDIKLQpsb2FkIDQwCmNhbGxzdWIgdHJhbnNmZXJBc3NldHNfMgpsb2FkIDM4CmxvYWQgNDIKbG9hZCA0MQpjYWxsc3ViIHRyYW5zZmVyQXNzZXRzXzIKcmV0c3ViCgovLyBjcmVhdGVQbGF0Zm9ybU5GVApjcmVhdGVQbGF0Zm9ybU5GVF8yMDoKZ2xvYmFsIEdyb3VwU2l6ZQpzdG9yZSAwCnR4biBHcm91cEluZGV4CmludCAxCi0KZ3R4bnMgVHlwZUVudW0KaW50IGFjZmcKPT0KYXNzZXJ0CnR4biBHcm91cEluZGV4CmludCAxCi0KZ3R4bnMgQ2xvc2VSZW1haW5kZXJUbwpnbG9iYWwgWmVyb0FkZHJlc3MKPT0KYXNzZXJ0CnR4biBHcm91cEluZGV4CmludCAxCi0KZ3R4bnMgQ29uZmlnQXNzZXRNYW5hZ2VyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCj09CmFzc2VydAp0eG4gR3JvdXBJbmRleAppbnQgMQotCmd0eG5zIENvbmZpZ0Fzc2V0Q2xhd2JhY2sKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKPT0KYXNzZXJ0CnR4biBHcm91cEluZGV4CmludCAxCi0KZ3R4bnMgQ29uZmlnQXNzZXRGcmVlemUKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKPT0KYXNzZXJ0CnR4biBHcm91cEluZGV4CmludCAxCi0KZ3R4bnMgU2VuZGVyCnR4biBTZW5kZXIKPT0KYXNzZXJ0CnR4biBHcm91cEluZGV4CmludCAxCi0KZ3R4bnMgQ29uZmlnQXNzZXREZWZhdWx0RnJvemVuCmludCAxCj09CmFzc2VydAp0eG4gR3JvdXBJbmRleAppbnQgMQotCmd0eG5zIENvbmZpZ0Fzc2V0TWV0YWRhdGFIYXNoCmdsb2JhbCBaZXJvQWRkcmVzcwohPQphc3NlcnQKdHhuIEdyb3VwSW5kZXgKaW50IDEKLQpndHhucyBDb25maWdBc3NldFVSTApnbG9iYWwgWmVyb0FkZHJlc3MKIT0KYXNzZXJ0CmludCAxCmFzc2VydAp0eG4gR3JvdXBJbmRleAppbnQgMQotCmd0eG5zIENyZWF0ZWRBc3NldElECmNhbGxzdWIgZW5zdXJlQ3VycmVudEFwcE9wdGVkSW50b0Fzc2V0XzQKbG9hZCAwCmludCAxCisKc3RvcmUgMAp0eG4gR3JvdXBJbmRleAppbnQgMgotCmd0eG5zIFR5cGVFbnVtCmludCBwYXkKPT0KYXNzZXJ0CnR4biBTZW5kZXIKdHhuIEdyb3VwSW5kZXgKaW50IDIKLQpndHhucyBBbW91bnQKaW50IFRNUExfVklECmNhbGxzdWIgYWRkU29saWRhcml0eUZlZUZvclVzZXJfNwp0eG4gR3JvdXBJbmRleAppbnQgMgotCmd0eG5zIEFtb3VudAp0eG4gU2VuZGVyCmludCBUTVBMX1ZJRApjYWxsc3ViIGZldGNoU29saWRhcml0eVJhdGVfNgpjYWxsc3ViIGFzc2V0Q3JlYXRpb25UYXhTdXBwbGllZF84CmFzc2VydAp0eG4gR3JvdXBJbmRleAppbnQgMgotCmd0eG5zIEZlZQpsb2FkIDAKaW50IDEwMDAKKgo9PQphc3NlcnQKaW50IDEKYXNzZXJ0CmJ5dGUgMHgxNTFmN2M3NQp0eG4gR3JvdXBJbmRleAppbnQgMQotCmd0eG5zIENyZWF0ZWRBc3NldElECml0b2IKY29uY2F0CmxvZwppbnQgMQpyZXRzdWIKCi8vIHNldHVwCnNldHVwXzIxOgp0eG5hIEFwcGxpY2F0aW9uQXJncyAzCmJ0b2kKdHhuYXMgQWNjb3VudHMKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNApidG9pCnR4bmFzIEFwcGxpY2F0aW9ucwpjYWxsc3ViIGdldEFwcGxpY2F0aW9uQWRkcmVzc18xCj09CmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmJ0b2kKY2FsbHN1YiBzZXRCYXNpc1BvaW50c18xMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmNhbGxzdWIgc2V0Um95YWx0aWVSZWNlaXZlcl8xMgppbnQgMjI1MDAwCnR4biBTZW5kZXIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNApidG9pCnR4bmFzIEFwcGxpY2F0aW9ucwpjYWxsc3ViIGZldGNoU29saWRhcml0eVJhdGVfNgpjYWxsc3ViIHJlc29sdmVZaWVsZF8wCml0b2IKbG9nCmludCAxCnJldHN1YgoKLy8gbWFya2V0VHJhbnNmZXIKbWFya2V0VHJhbnNmZXJfMjI6CnR4biBTZW5kZXIKY2FsbHN1YiBnZXRPZmZlcl8xNwpzdG9yZSAyMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmJ0b2kKdHhuYXMgQWNjb3VudHMKYWNjdF9wYXJhbXNfZ2V0IEFjY3RBdXRoQWRkcgpzdG9yZSAyNApzdG9yZSAyMwp0eG5hIEFwcGxpY2F0aW9uQXJncyAzCmJ0b2kKdHhuYXMgQWNjb3VudHMKYWNjdF9wYXJhbXNfZ2V0IEFjY3RBdXRoQWRkcgpzdG9yZSAyNgpzdG9yZSAyNQpnbG9iYWwgR3JvdXBTaXplCmludCAyCj09CnR4biBTZW5kZXIKbG9hZCAyMgpjYWxsc3ViIGV4dHJhY3RBdXRob3JpemVyRnJvbU9mZmVyXzEzCj09CiYmCnR4biBHcm91cEluZGV4CmludCAxCi0KZ3R4bnMgUmVrZXlUbwpnbG9iYWwgWmVyb0FkZHJlc3MKPT0KJiYKdHhuIEdyb3VwSW5kZXgKaW50IDEKLQpndHhucyBTZW5kZXIKbG9hZCAyMgpjYWxsc3ViIGV4dHJhY3RBdXRob3JpemVyRnJvbU9mZmVyXzEzCj09CiYmCnR4bmEgQXBwbGljYXRpb25BcmdzIDUKYnRvaQpsb2FkIDIyCmNhbGxzdWIgZXh0cmFjdE9mZmVyQW1vdW50RnJvbU9mZmVyXzE0Cjw9CiYmCnR4biBHcm91cEluZGV4CmludCAxCi0KZ3R4bnMgVHlwZUVudW0KaW50IGF4ZmVyCj09CnR4biBHcm91cEluZGV4CmludCAxCi0KZ3R4bnMgQXNzZXRDbG9zZVRvCmdsb2JhbCBaZXJvQWRkcmVzcwo9PQomJgp0eG4gR3JvdXBJbmRleAppbnQgMQotCmd0eG5zIEFzc2V0UmVjZWl2ZXIKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKPT0KJiYKdHhuIEdyb3VwSW5kZXgKaW50IDEKLQpndHhucyBUeXBlRW51bQppbnQgcGF5Cj09CnR4biBHcm91cEluZGV4CmludCAxCi0KZ3R4bnMgQ2xvc2VSZW1haW5kZXJUbwpnbG9iYWwgWmVyb0FkZHJlc3MKPT0KJiYKdHhuIEdyb3VwSW5kZXgKaW50IDEKLQpndHhucyBSZWNlaXZlcgpnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwo9PQomJgp8fAomJgpjYWxsc3ViIGdldFJlY2VpdmVyQWRkcmVzc18xMApsb2FkIDIyCmNhbGxzdWIgZXh0cmFjdEF1dGhvcml6ZXJGcm9tT2ZmZXJfMTMKPT0KJiYKYXNzZXJ0CmxvYWQgMjIKY2FsbHN1YiBleHRyYWN0QXV0aG9yaXplckZyb21PZmZlcl8xMwpsb2FkIDIyCmNhbGxzdWIgZXh0cmFjdFNlbGxlckZyb21PZmZlcl8xNQo9PQphc3NlcnQKbG9hZCAyMwpnbG9iYWwgWmVyb0FkZHJlc3MKPT0KYXNzZXJ0CmxvYWQgMjUKZ2xvYmFsIFplcm9BZGRyZXNzCj09CmFzc2VydAp0eG4gR3JvdXBJbmRleAppbnQgMQotCmd0eG5zIFR5cGVFbnVtCmludCBheGZlcgo9PQpibnogbWFya2V0VHJhbnNmZXJfMjJfbDIKdHhuIEdyb3VwSW5kZXgKaW50IDEKLQpndHhucyBBbW91bnQKbG9hZCAyMgpjYWxsc3ViIGV4dHJhY3RTZWxsZXJGcm9tT2ZmZXJfMTUKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNApidG9pCnR4bmFzIEFjY291bnRzCmNhbGxzdWIgZGlzdHJpYnV0ZVBheW1lbnRWaWFBbGdvc18xOApiIG1hcmtldFRyYW5zZmVyXzIyX2wzCm1hcmtldFRyYW5zZmVyXzIyX2wyOgp0eG4gR3JvdXBJbmRleAppbnQgMQotCmd0eG5zIFhmZXJBc3NldAp0eG4gR3JvdXBJbmRleAppbnQgMQotCmd0eG5zIEFzc2V0QW1vdW50CnR4bmEgQXBwbGljYXRpb25BcmdzIDIKYnRvaQp0eG5hcyBBY2NvdW50cwp0eG5hIEFwcGxpY2F0aW9uQXJncyA0CmJ0b2kKdHhuYXMgQWNjb3VudHMKY2FsbHN1YiBkaXN0cmlidXRlUGF5bWVudFZpYUFzc2V0XzE5Cm1hcmtldFRyYW5zZmVyXzIyX2wzOgpsb2FkIDIyCmNhbGxzdWIgZXh0cmFjdEF1dGhvcml6ZXJGcm9tT2ZmZXJfMTMKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpidG9pCnR4bmFzIEFzc2V0cwppdG9iCmxvYWQgMjIKY2FsbHN1YiBleHRyYWN0QXV0aG9yaXplckZyb21PZmZlcl8xMwpsb2FkIDIyCmNhbGxzdWIgZXh0cmFjdE9mZmVyQW1vdW50RnJvbU9mZmVyXzE0CnR4bmEgQXBwbGljYXRpb25BcmdzIDUKYnRvaQotCmNhbGxzdWIgdXBkYXRlb2ZmZXJlZF8yNgppbnQgMQpyZXRzdWIKCi8vIGNyZWF0ZVZpZ2VlT2ZmZXIKY3JlYXRlVmlnZWVPZmZlcl8yMzoKdHhuIFNlbmRlcgp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKdHhuYXMgQXNzZXRzCmFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQpzdG9yZSA1MQpzdG9yZSA1MApsb2FkIDUwCnR4bmEgQXBwbGljYXRpb25BcmdzIDIKYnRvaQo+PQphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpidG9pCnR4bmFzIEFzc2V0cwpjYWxsc3ViIGdldHBvbGljeV8yNwpsZW4KaW50IDAKPgphc3NlcnQKdHhuIFNlbmRlcgp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKdHhuYXMgQXNzZXRzCml0b2IKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwpidG9pCnR4bmFzIEFjY291bnRzCnR4bmEgQXBwbGljYXRpb25BcmdzIDIKYnRvaQpjYWxsc3ViIHVwZGF0ZW9mZmVyZWRfMjYKaW50IDEKcmV0c3ViCgovLyByZXNjaW5kCnJlc2NpbmRfMjQ6CnR4biBTZW5kZXIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpidG9pCnR4bmFzIEFzc2V0cwppdG9iCmJ5dGUgIiIKaW50IDAKY2FsbHN1YiB1cGRhdGVvZmZlcmVkXzI2CmludCAxCnJldHN1YgoKLy8gcm95YWx0aWVGcmVlTW92ZQpyb3lhbHRpZUZyZWVNb3ZlXzI1OgpnbG9iYWwgQ2FsbGVyQXBwbGljYXRpb25JRAppbnQgVE1QTF9WSUQKPT0KYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDMKYnRvaQp0eG5hcyBBY2NvdW50cwppbnQgMAphcHBfb3B0ZWRfaW4KYnogcm95YWx0aWVGcmVlTW92ZV8yNV9sMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAzCmJ0b2kKdHhuYXMgQWNjb3VudHMKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpidG9pCnR4bmFzIEFzc2V0cwppdG9iCmJ5dGUgIiIKaW50IDAKY2FsbHN1YiB1cGRhdGVvZmZlcmVkXzI2CnJveWFsdGllRnJlZU1vdmVfMjVfbDI6CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKYnRvaQp0eG5hcyBBc3NldHMKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwpidG9pCnR4bmFzIEFjY291bnRzCnR4bmEgQXBwbGljYXRpb25BcmdzIDQKYnRvaQp0eG5hcyBBY2NvdW50cwp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmJ0b2kKY2FsbHN1YiB0cmFuc2ZlckFzc2V0XzUKaW50IDEKcmV0c3ViCgovLyB1cGRhdGVfb2ZmZXJlZAp1cGRhdGVvZmZlcmVkXzI2OgpzdG9yZSA0OQpzdG9yZSA0OApzdG9yZSA0NwpzdG9yZSA0Ngpsb2FkIDQ5CmludCAwCj4KYm56IHVwZGF0ZW9mZmVyZWRfMjZfbDIKbG9hZCA0Ngpsb2FkIDQ3CmFwcF9sb2NhbF9kZWwKYiB1cGRhdGVvZmZlcmVkXzI2X2wzCnVwZGF0ZW9mZmVyZWRfMjZfbDI6CmxvYWQgNDYKbG9hZCA0Nwpsb2FkIDQ4CmxvYWQgNDkKaXRvYgpjb25jYXQKYXBwX2xvY2FsX3B1dAp1cGRhdGVvZmZlcmVkXzI2X2wzOgpyZXRzdWIKCi8vIGdldF9wb2xpY3kKZ2V0cG9saWN5XzI3OgpzdG9yZSA1MgppbnQgMApsb2FkIDUyCml0b2IKYXBwX2dsb2JhbF9nZXRfZXgKc3RvcmUgNTYKc3RvcmUgNTUKaW50IDAKaW50IDAKaXRvYgphcHBfZ2xvYmFsX2dldF9leApzdG9yZSA1NApzdG9yZSA1Mwpsb2FkIDU2CmxvYWQgNTQKfHwKYXNzZXJ0CmxvYWQgNTYKYm56IGdldHBvbGljeV8yN19sMgpsb2FkIDUzCmIgZ2V0cG9saWN5XzI3X2wzCmdldHBvbGljeV8yN19sMjoKbG9hZCA1NQpnZXRwb2xpY3lfMjdfbDM6CnJldHN1YgoKLy8gY3JlYXRlCmNyZWF0ZV8yODoKYnl0ZSAweDE1MWY3Yzc1Cmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25JRAppdG9iCmNvbmNhdApsb2cKaW50IDEKcmV0c3Vi"